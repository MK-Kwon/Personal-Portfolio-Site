https://blog.bitsrc.io/lazy-loading-react-components-with-react-lazy-and-suspense-f05c4cfde10c

Lazy loading is the technique of rendering only-needed or critical user interface items first, then quietly unrolling the non-critical items later. 

Suspense is a component required by the lazy function basically used to wrap lazy components. 


Why is Lazy Loading (& Suspense) Important?

Firstly, bundling involves aligning our code components in progression and putting them in one javascript chunk that it passes to the browser; but as our application grows, 
we notice that bundle gets very cumbersome in size. This can quickly make using your application very hard and especially slow. 
With Code splitting, the bundle can be split to smaller chunks where the most important chunk can be loaded first and then every other secondary one lazily loaded.

Also, while building applications we know that as a best practise consideration should be made for users using mobile internet data and others with really slow internet connections. 
We the developers should always be able to control the user experience even during a suspense period when resources are being loaded to the DOM.
